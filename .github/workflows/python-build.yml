name: Build and Release Python Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Executable
      run: pyinstaller --onefile --name sprite-stacker src/main.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: sprite-stacker.exe
        path: dist/sprite-stacker.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: sprite-stacker.exe

    - name: Check if Release Already Exists
      id: check_release
      uses: actions/github-script@0.9.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const tag = 'release'
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const release = releases.data.find(release => release.tag_name === tag);
          if (release) {
            core.setOutput('exists', 'true');
            core.setOutput('upload_url', release.upload_url);
          } else {
            core.setOutput('exists', 'false');
          }

    - name: Create Release
      if: steps.check_release.outputs.exists == 'false'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release
        release_name: Release
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.check_release.outputs.exists == 'true' && steps.check_release.outputs.upload_url || steps.create_release.outputs.upload_url }}
        asset_path: ./sprite-stacker.exe
        asset_name: sprite-stacker.exe
        asset_content_type: application/octet-stream
